"""Removes session table

Revision ID: f75f3a0c5e6f
Revises: Removes session table
Create Date: 2024-07-27 11:03:20.116423

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine import Inspector

# revision identifiers, used by Alembic.
revision = "f75f3a0c5e6f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "sessions" in tables:
        op.drop_table("sessions")
    # with op.batch_alter_table('UtubMembers', schema=None) as batch_op:
    #    batch_op.create_unique_constraint('unique_member', ['utubID', 'userID'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table("UtubMembers", schema=None) as batch_op:
    #    batch_op.drop_constraint("unique_member", type_="unique")

    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "sessions" in tables:
        return

    op.create_table(
        "sessions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "session_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("data", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("expiry", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="sessions_pkey"),
        sa.UniqueConstraint("session_id", name="sessions_session_id_key"),
    )
    # ### end Alembic commands ###
