"""Convert Tags to UTubTags

Revision ID: d1444b5d08bb
Revises: f75f3a0c5e6f
Create Date: 2024-07-30 15:18:14.094615

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine import Inspector

# revision identifiers, used by Alembic.
revision = "d1444b5d08bb"
down_revision = "f75f3a0c5e6f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table("Tags", "UtubTags")
    with op.batch_alter_table("UtubTags", schema=None) as batch_op:
        batch_op.add_column(sa.Column("utubID", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            "UtubTags_utubID_fkey",
            "Utubs",
            ["utubID"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )
        batch_op.create_unique_constraint(
            "unique_tag_per_utub", ["utubID", "tagString"]
        )

    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "Tags" in tables:
        op.drop_table("Tags")
    #     with op.batch_alter_table('UtubMembers', schema=None) as batch_op:
    #         batch_op.create_unique_constraint('unique_member', ['utubID', 'userID'])

    with op.batch_alter_table("UtubUrlTags", schema=None) as batch_op:
        batch_op.add_column(sa.Column("utubTagID", sa.Integer(), nullable=False))
        batch_op.alter_column("utubUrlID", existing_type=sa.INTEGER(), nullable=False)
        batch_op.drop_constraint("UtubUrlTags_tagID_fkey", type_="foreignkey")
        batch_op.drop_constraint("UtubUrlTags_utubID_fkey", type_="foreignkey")
        batch_op.drop_constraint("UtubUrlTags_utubUrlID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            "UtubUrlTags_utubTagID_fkey",
            "UtubTags",
            ["utubTagID"],
            ["id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "UtubUrlTags_utubID_fkey",
            "Utubs",
            ["utubID"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "UtubUrlTags_utubUrlID_fkey",
            "UtubUrls",
            ["utubUrlID"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )
        batch_op.drop_column("tagID")

    with op.batch_alter_table("UtubUrls", schema=None) as batch_op:
        batch_op.alter_column("utubID", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("urlID", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("userID", existing_type=sa.INTEGER(), nullable=False)
        batch_op.drop_constraint("UtubUrls_utubID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            "UtubUrls_utubID_fkey",
            "Utubs",
            ["utubID"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("UtubUrls", schema=None) as batch_op:
        batch_op.drop_constraint("UtubUrls_utubID_fkey", type_="foreignkey")
        batch_op.create_foreign_key("UtubUrls_utubID_fkey", "Utubs", ["utubID"], ["id"])
        batch_op.alter_column("userID", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("urlID", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("utubID", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("UtubTags", schema=None) as batch_op:
        batch_op.drop_constraint("UtubTags_utubID_fkey", type_="foreignkey")
        batch_op.drop_constraint("unique_tag_per_utub", type_="unique")
        batch_op.drop_column("utubID")

    op.rename_table("UtubTags", "Tags")

    with op.batch_alter_table("UtubUrlTags", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("tagID", sa.INTEGER(), autoincrement=False, nullable=False)
        )
        batch_op.drop_constraint("UtubUrlTags_utubUrlID_fkey", type_="foreignkey")
        batch_op.drop_constraint("UtubUrlTags_utubID_fkey", type_="foreignkey")
        batch_op.drop_constraint("UtubUrlTags_utubTagID_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            "UtubUrlTags_utubUrlID_fkey", "UtubUrls", ["utubUrlID"], ["id"]
        )
        batch_op.create_foreign_key(
            "UtubUrlTags_utubID_fkey", "Utubs", ["utubID"], ["id"]
        )
        batch_op.create_foreign_key("UtubUrlTags_tagID_fkey", "Tags", ["tagID"], ["id"])
        batch_op.alter_column("utubUrlID", existing_type=sa.INTEGER(), nullable=True)
        batch_op.drop_column("utubTagID")

    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "UtubTags" in tables:
        op.drop_table("UtubTags")


#     with op.batch_alter_table('UtubMembers', schema=None) as batch_op:
#         batch_op.drop_constraint('unique_member', type_='unique')
# ### end Alembic commands ###
