"""Initial migration

Revision ID: d5abefc6c65a
Revises:
Create Date: 2024-11-01 08:55:53.845453

"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "d5abefc6c65a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=25), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("password", sa.String(length=166), nullable=False),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "role", sa.Enum("ADMIN", "USER", "MOD", name="user_role"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )

    op.create_table(
        "EmailValidations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("validationToken", sa.String(length=2000), nullable=False),
        sa.Column("isValidated", sa.Boolean(), nullable=True),
        sa.Column("attempts", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("lastAttempt", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("userID"),
    )

    op.create_table(
        "ForgotPasswords",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("resetToken", sa.String(length=2000), nullable=False),
        sa.Column("attempts", sa.Integer(), nullable=False),
        sa.Column("initialAttempt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("lastAttempt", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "Utubs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("utubName", sa.String(length=30), nullable=False),
        sa.Column("utubCreator", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("lastUpdated", sa.DateTime(timezone=True), nullable=False),
        sa.Column("utubDescription", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["utubCreator"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "UtubMembers",
        sa.Column("utubID", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=False),
        sa.Column(
            "memberRole",
            sa.Enum("MEMBER", "CREATOR", "CO_CREATOR", name="member_role"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["Users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["utubID"],
            ["Utubs.id"],
        ),
        sa.PrimaryKeyConstraint("utubID", "userID"),
        sa.UniqueConstraint("utubID", "userID", name="unique_member"),
    )

    op.create_table(
        "UtubTags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tagString", sa.String(length=30), nullable=False),
        sa.Column("utubID", sa.Integer(), nullable=False),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["createdBy"],
            ["Users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["utubID"], ["Utubs.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("utubID", "tagString", name="unique_tag_per_utub"),
    )

    op.create_table(
        "Urls",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("urlString", sa.String(length=8000), nullable=False),
        sa.Column("createdBy", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["createdBy"],
            ["Users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("urlString"),
    )

    op.create_table(
        "UtubUrls",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("utubID", sa.Integer(), nullable=False),
        sa.Column("urlID", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=False),
        sa.Column("urlTitle", sa.String(length=140), nullable=True),
        sa.Column("addedAt", sa.DateTime(timezone=True), nullable=False),
        sa.Column("lastAccessed", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["Users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["utubID"], ["Utubs.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["urlID"],
            ["Urls.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "UtubUrlTags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("utubID", sa.Integer(), nullable=False),
        sa.Column("utubUrlID", sa.Integer(), nullable=False),
        sa.Column("utubTagID", sa.Integer(), nullable=False),
        sa.Column("addedAt", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["utubID"], ["Utubs.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["utubTagID"], ["UtubTags.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["utubUrlID"], ["UtubUrls.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("UtubUrlTags")
    op.drop_table("UtubUrls")

    op.drop_constraint("Urls_urlString_key", "Urls")
    op.drop_table("Urls")

    op.drop_constraint("unique_tag_per_utub", "UtubTags")
    op.drop_table("UtubTags")

    op.drop_constraint("unique_member", "UtubMembers")
    op.drop_table("UtubMembers")

    op.drop_table("Utubs")
    op.drop_table("ForgotPasswords")

    op.drop_constraint("EmailValidations_userID_key", "EmailValidations")
    op.drop_table("EmailValidations")

    op.drop_constraint("Users_email_key", "Users")
    op.drop_constraint("Users_username_key", "Users")
    op.drop_table("Users")
    op.execute("""DROP TYPE user_role""")
    op.execute("""DROP TYPE member_role""")
    # ### end Alembic commands ###
