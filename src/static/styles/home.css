/** Class specific **/

/* Page display */

#pageContent {
    display: flex;
    flex-direction: row;
    height: 100vh;
    width: 100%;
    max-width: 100%;
    padding-top: 50px;
    padding-bottom: 5px;
    background-color: var(--pageBackgroundColor);
}

.panel {
    height: 100%;
    display: flex;
    flex-direction: column;
    padding-inline: 5px;
}

.deck {
    width: 100%;
    margin-top: 5px;
    background: var(--panelBackgroundColor);
    border: 2px solid var(--borderColor);
    border-radius: 15px;
    color: var(--deckSelectionGreen);
    overflow: hidden;
    /**padding-inline: 15px;**/
    padding-top: 5px;
    padding-bottom: 8px;
}

.deckContent {
    width: 100%;
    height: 90%;
    margin: 0px;
    overflow: hidden;
}

.deck#MemberDeck,
.deck#TagDeck {
    height: 33%;
}

.deck#UTubDeck {
    height: 34%;
}

/* Buttons */
.green-clickable {
    color: var(--splashGreen);
}

.green-clickable-wide {
    background: var(--splashGreen); 
}

.green-clickable:hover {
    cursor: pointer;
    color: var(--darkSplashGreen);
}

.green-clickable-wide:hover {
    cursor: pointer;
    background: var(--darkSplashGreen);
}

.trash-fill {
    background: var(--removeIconColor);
    border-radius: 4px;
}

.cancelButton-wide:hover,
.trash-fill:hover {
    cursor: pointer;
    background: var(--removeIconColorHover);
}

.cancelButton {
    color: var(--removeIconColor);
}

.cancelButton-wide {
    background: var(--removeIconColor);
}

.green-clickable-wide > svg,
.cancelButton-wide > svg {
    fill: var(--panelBackgroundColor);
}

.cancelButton:hover {
    cursor: pointer;
    color: var(--removeIconColorHover);
}

.icon-holder {
    justify-content: flex-end;
}

/* Utility */

.flex-row {
    display: flex;
    flex-direction: row;
}

.flex-row-reverse {
    display: flex;
    flex-direction: row-reverse;
}

.flex-column {
    display: flex;
    flex-direction: column;
}

.titleElement {
    display: flex;
    flex: 0 0 auto;
    align-items: center;
    flex-direction: row;
}

.content {
    flex: 1 1 auto;
    overflow-y: auto;
    scrollbar-width: thin;
    border-top: 2px solid var(--contentTopBorder);
}

.flex-start {
    align-items: flex-start;
}

.wrap {
    flex-wrap: wrap;
}

.align-center {
    align-items: center;
}

.justify-center {
    justify-content: center;
}

.justify-space-between {
    justify-content: space-between;
}

.pad-in-15p {
    padding-inline: 15px;
}

.gap-20p {
    gap: 20px;
}

.pad-top-5p {
    padding-top: 5px;
}

.pad-bot-5p {
    padding-bottom: 5px;
}

.pad-top-bot-5p {
    padding-top: 5px;
    padding-bottom: 5px;
}

.half-width {
    width: 50%;
}

.sixtyfive-width {
    width: 65%;
}

.full-width {
    width: 100%;
}

.ninetyfive-width {
    width: 95%;
}

.border-radius-5px {
    border-radius: 10px;
}

.visible {
    display: block !important;
}

.visible-flex {
    display: flex !important;
}

.hidden {
    display: none !important;
}

.invalid-field {
    border-color: red !important;
}

.pointerable {
    cursor: pointer;
}

.btn-text-on-hvr:hover {
    color: white;
}

.long-text-ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.width-with-icon {
    width: calc(100% - 25px);
}

/* UTubs */

.active,
.active:hover .UTubName {
    color: var(--selectedUTubColor);
}

.UTubName:hover {
    cursor: pointer;
    color: var(--deckSelectionGreenHover)
}

.updateIcon:hover {
    cursor: pointer;
    color: white;
}

/* Tags */

.tagBadge {
    color: var(--darkSplashGreen);
    background: var(--cardBackgroundColor);
    margin-left: 2px;
    margin-right: 2px;
    padding-left: 6px;
    padding-right: 6px;
    border-radius: 12px;
    white-space: nowrap;
    border: 1px solid var(--borderColor);
}


.tagBadge:hover .urlTagBtnDelete {
    width: 100%;
    opacity: 100%;
    padding-left: 6px;
}

.urlTagBtnDelete {
    width: 0;
    opacity: 0;
    padding: 0;
    color: var(--tagBadgeDeleteBtnColor);
    transition: width 0.1s ease-in, opacity 0.1s ease-in, color 0.1s ease-in, padding 0.1s ease-in;
}

.urlTagBtnDelete:hover {
    color: var(--tagBadgeDeleteBtnColorHover);
}

#selectAll,
.tagFilter {
    display: flex;
    padding: 3px 3px;
    margin-top: 5px;
    border-radius: 25px;
    transition: background-color 0.3s, border-color 0.3s;
}

#selectAll,
.tagFilter {
    border: 2px solid var(--tagBorderColor);
    background-color: var(--tagBackgroundColorSelected);
}

#selectAll:hover,
.tagFilter:hover {
    border-color: #aaa;
}

#selectAll.unselected,
.tagFilter.unselected {
    background-color: var(--tagBackgroundColor);
    border: 2px solid var(--tagBorderColor);
    border-radius: 25px;
    color: white;
}

#selectAll.unselected:hover,
.tagFilter.unselected:hover {
    background-color: var(--tagBackgroundColorHover);
    border-color: var(--tagBorderColor);
}

.urlTags:has(.tagBadge) {
    gap: 2rem;
}

/* URLs */

#listURLs .urlRow:nth-child(odd),
#listURLs .urlRow:nth-child(odd) .text-input-inner-container > label, 
#listURLs .urlRow:nth-child(odd) .text-input-inner-container > input { 
    background-color: var(--cardBackgroundColor);
}

#listURLs .urlRow:nth-child(odd) .tagBadge {
    background: var(--pageBackgroundColor);
}

#listURLs .urlRow:nth-child(odd):not([urlSelected="true"]):hover {
    background-color: rgba(61, 71, 71, 1.0); 
}

#listURLs .urlRow:nth-child(even):not([urlSelected="true"]):hover {
    background-color: rgba(51, 61, 61, 1.0);
}

#listURLs .urlRow:last-child {
    border-bottom-width: 2px;
}

.urlRow {
    border-bottom: 1px solid var(--borderColor);
    border-top: 1px solid var(--borderColor);
    transition: background-color 0.15s ease, padding 0.2s ease-in-out;
    padding: 5px 15px;
}

.urlTitle {
    margin: 0;
    font-weight: bold;
    line-height: inherit;
}

.urlString {
    width: 100%;
    color: var(--cardURLTextColor);
}

.urlOptions {
    flex-wrap: no-wrap;
    gap: 15px;
}

.goToUrlIcon {
    display: none;
    color: var(--deckSelectionGreenHover);
    transition: color 0.1s ease, visibility 2.5s ease;
    align-self: flex-start;
}

.urlRow:hover .goToUrlIcon {
    display: flex;
}

.goToUrlIcon:hover {
    color: var(--deckSelectionGreen);
}

.outerTagsAndButtonsWrap {
    display: grid;
    grid-template-rows: min-content 0fr;
}

.urlTags,
.urlOptions {
    height: 0;
    overflow: hidden;
    transition: padding 0.2s ease-in-out, opacity 0.2s ease-in-out;
    padding: 0;
    opacity: 0;
}

.urlRow[urlSelected="true"] {
    border-top: 1px solid var(--selectedUrlBorder);
    border-bottom: 1px solid var(--selectedUrlBorder) !important;
    cursor: auto;
    padding-top: 15px;
    padding-bottom: 20px;
}

.urlRow[urlSelected="true"] .urlTags,
.urlRow[urlSelected="true"] .urlOptions {
    height: auto;
    opacity: 1;
}

.urlRow[urlSelected="true"] .urlTags {
    padding: 20px 0 15px 0;
}

.urlRow[urlSelected="true"] .urlOptions {
    padding: 15px 0 0 0;
}

.urlRow[urlSelected="true"] .urlString {
    overflow-wrap: break-word;
    white-space: normal;
}

.urlRow[urlSelected="true"] .urlString:hover {
    text-decoration: underline;
    cursor: pointer;
}

.updateURLTitleShowFormIcon {
    display: none;
}

.urlRow[urlSelected="true"] .urlTitleAndUpdateIconInnerWrap:hover > .updateURLTitleShowFormIcon {
    display: flex;
}

.urlRow[urlSelected=false] .urlTitle {
    width: 95%;
}

.urlRow[urlSelected="true"] .urlTitleAndUpdateIconInnerWrap {
    width: max-content;
}

.urlRow[urlSelected="true"] .updateUrlTitleWrap > .text-input-container {
    width: 65%;
}

.urlRow[urlSelected="true"] .updateUrlStringWrap > .text-input-container {
    width: 100%;
}

.urlRow[urlSelected="true"] .createUrlTagWrap > .text-input-container {
    width: 45%;
}

.urlTags::before,
.urlOptions::before {
    margin-top: -30px;
}

.urlTags::after,
.urlOptions::after {
    margin-bottom: -30px;
}

.urlOptions::after {
    padding-bottom: 0;
}

.urlTagsContainer span:first-child {
    margin-left: 0;
}

#createURLWrap {
    border-top: 1px solid var(--selectedUrlBorder);
    border-bottom: 1px solid var(--selectedUrlBorder) !important;
    padding-top: 15px;
    padding-bottom: 15px;
}

.updateUrlTitleWrap {
    padding-bottom: 20px;
}

.updateUrlStringWrap {
    padding-bottom: 20px;
    padding-top: 20px;
}


.urlRow[urlSelected="true"] .urlTitle {
    white-space: normal;
    text-overflow: unset;
}

.hiddenBtn#updateUTubDescriptionBtn, 
.hiddenBtn#utubNameBtnUpdate {
    display: none !important;
}

/* Members */

.member {
    color: #aaa;
    border-color: #aaa;
    padding: 3px 3px;
    border-radius: 25px;
    border: 2px solid var(--tagBorderColor);
    background-color: var(--cardBackgroundColor);
}

.member:hover > .memberOtherBtnDelete {
    display: flex;
}

.memberOtherBtnDelete {
    display: none;
    color: var(--removeMemberColor);
    transition: color 0.2s;
}

.memberOtherBtnDelete:hover {
    color: red;
}

.memberOtherBtnDelete:focus {
    outline: none;
    box-shadow: none;
}

/** Custom Text Input Box **/

.text-input-container {
    display: flex;
    flex-direction: column;
}

.text-input-inner-container {
    position: relative;
}

.text-input[type="text"] {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--borderColor);
    border-radius: 4px;
    font-size: 16px;
    outline: none;
    transition: 0.3s ease;
    background: var(--pageBackgroundColor);
    color: whitesmoke;
}

.text-input[type="text"]:hover {
    border-color: var(--deckSelectionGreenHover);
}

.text-input[type="text"]:focus {
    border-color: var(--deckSelectionGreen);
}

.text-input-label {
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(-50%);
    background: white;
    padding: 0 5px;
    color: #666;
    font-size: 16px;
    transition: 0.3s ease;
    pointer-events: none;
    background: var(--panelBackgroundColor);
}

.text-input:focus + .text-input-label {
    top: 0px;
    left: 10px;
    color: var(--deckSelectionGreenHover);
    font-size: 14px;
}

.text-input-error-message {
    display: none;
    color: red;
    font-size: 14px;
    margin-top: 5px;
}

/** Loading ring **/
.dual-loading-ring {
  /* change color here */
  color: #1c4c5b
}
.dual-loading-ring,
.dual-loading-ring:after {
  box-sizing: border-box;
}
.dual-loading-ring {
  display: flex !important;
  align-items: center;
  height: 38px;
  width: auto;
}
.dual-loading-ring:after {
  content: " ";
  display: inline-block !important;
  height: 38px;
  width: 38px;
  border-radius: 50%;
  border: 6.4px solid currentColor;
  border-color: currentColor transparent currentColor transparent;
  animation: dual-loading-ring 1.2s linear infinite;
}
@keyframes dual-loading-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


/** ID specific **/

#urlCreateDualLoadingRing {
    display: none;
}

#UTubDescriptionSubheaderWrap ~ .createDiv {
    padding-top: 1rem;
    padding-bottom: 1rem;
}

#listMembers {
    gap: 3px;
}

#MemberDeckHeader,
#TagDeckHeader,
#UTubDeckHeader,
#UTubDescriptionDeckHeader,
#URLDeckHeader {
    margin-bottom: 0px;
}

#MemberDeckSubheader,
#TagDeckSubheader,
#UTubDeckSubheader,
#URLDeckSubheader {
    margin-top: 3px;
}

#MembersHeader {
    margin-top: 0.75rem;
}

#NoURLsSubheader {
    color: rgba(255, 255, 255, 0.75);
}

#updateUTubDescriptionBtn,
#utubNameBtnUpdate {
    color: rgba(84, 84, 84, 1.0);
}

#UTubDescriptionSubheaderWrap > .visibleBtn,
#UTubNameUpdateWrap > .visibleBtn {
    display: none !important;

}

#UTubDescriptionSubheaderWrap:hover > .visibleBtn,
#UTubNameUpdateWrap:hover > .visibleBtn {
    display: flex !important;
}

#createMemberWrap,
#createUTubWrap {
    height: 100%;
    gap: 20px;
    margin-top: 20px;
}

#URLDeckSubheaderCreateDescription {
    margin-top: 5px;
    margin-bottom: 5px;
    color: var(--cardURLTextColor);
}

#URLDeckSubheaderCreateDescription:hover {
    cursor: pointer;
    text-decoration: underline;
}

#URLDeckSubheader {
    word-break: break-all;
}


/* Media size for responsiveness 
 * https://getbootstrap.com/docs/5.2/layout/breakpoints/ 
 * */

@media (max-width: 1100px) {
    .urlRow[urlSelected="true"] .urlTitle {
        /*
        width: max-content;
        max-width: 95%;
        */
    }
}

@media (max-width: 767.98px) {
    .titleElement {
        align-items: flex-start;
        flex-direction: column;
    }

    .icon-holder {
        justify-content: flex-start;
    }

    #memberBtnCreate,
    #utubBtnCreate {
        margin-inline: 0px !important;
    }
}

@media (max-width: 575.98px) {
    .cardCol {
        width: 100%;
    }

    #pageContent {
        flex-direction: column;
    }

    #accessAllURLsBtn {
        width: 100% !important;
    }

}

