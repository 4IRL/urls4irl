name: Tests

on:
  pull_request:
    branches: [backend, frontend, dev, main]
  
jobs:
  python-black-formatter:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: Check Python with Black
      uses: psf/black@stable
      with:
        options: " --verbose"       
    - name: Verify Python with Black
      uses: psf/black@stable
      with:
        options: "--check --verbose"
    - name: Check for modified files
      id: git-check
      run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
    - name: Commit Lint Changes
      if: steps.git-check.outputs.modified == 'true'
      run: |
        git config --local user.email "${{ secrets.MY_EMAIL }}"
        git config --local user.name "${{ secrets.NAME }}"
        git commit -a -m "Formatted Python code - Black"
    - name: Push changes
      if: steps.git-check.outputs.modified == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  javascript-prettier-formatter:
    needs: python-black-formatter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Prettier
        run: npx prettier --write **/*.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
      - name: Commit Lint Changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --local user.email "${{ secrets.MY_EMAIL }}"
          git config --local user.name "${{ secrets.NAME }}"
          git commit -a -m "Formatted javascript code - Prettier"
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  run-tests:
    needs: javascript-prettier-formatter
    env:
      FLASK_ENV: 'development'
      PRODUCTION: 'false'
      SECRET_KEY: 'ABCDEFGH12345678'
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.10.12-bookworm

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Map the ports
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      env: 
        DATABASE_URL_TEST: postgresql://postgres:postgres@postgres:${{ job.services.postgres.ports['5432'] }}/postgres
      run: |
        python -m pytest -sv
