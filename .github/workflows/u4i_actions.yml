name: Tests

on:
  push:
      branches: [backend, frontend, dev, main]
permissions:
    contents: write
  
jobs:
  Lint-and-Test:
    env:
      FLASK_DEBUG: 'development'
      PRODUCTION: 'false'
      SECRET_KEY: 'ABCDEFGH12345678'
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Docker Hub image that `container-job` executes in
    container: python:3.10.12-bookworm

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Map the ports
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Check Python with Black
      uses: psf/black@stable
      with:
        options: " --verbose"       

    - name: Verify Python with Black
      uses: psf/black@stable
      with:
        options: "--check --verbose"

    - name: Check for modified files
      id: git-check-python
      run: |
        git config --global --add safe.directory /__w/urls4irl/urls4irl;   
        echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Prettier
      run: npx prettier --write **/*.js

    - name: Check for modified files
      id: git-check-javascript
      run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

    - name: Commit Lint Changes
      if: steps.git-check-python.outputs.modified == 'true' || steps.git-check-javascript.outputs.modified == 'true'
      run: |
        git config --global user.email "${{ secrets.MY_EMAIL }}"
        git config --global user.name "${{ secrets.NAME }}"
        git commit -a -m "[Auto] Format javascript and python"

    - name: Push changes
      if: steps.git-check-python.outputs.modified == 'true' || steps.git-check-javascript.outputs.modified == 'true'
      run: |
        git push

    - name: Set up Python Environment
      if: steps.git-check-python.outputs.modified == 'false' && steps.git-check-javascript.outputs.modified == 'false'
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Dependencies
      if: steps.git-check-python.outputs.modified == 'false' && steps.git-check-javascript.outputs.modified == 'false'
      run: |
        python3 -m venv venv;
        . ./venv/bin/activate;
        python3 -m pip install --upgrade pip;
        pip install -r requirements.txt;
        
    - name: Run tests
      if: steps.git-check-python.outputs.modified == 'false' && steps.git-check-javascript.outputs.modified == 'false'
      env: 
        DATABASE_URL_TEST: postgresql://postgres:postgres@postgres:${{ job.services.postgres.ports['5432'] }}/postgres
      run: |
        . ./venv/bin/activate;
        python3 -m pytest -sv
