name: u4i-dev

services:
  web:
    container_name: u4i-local-web
    build:
      context: .
      dockerfile: DockerfileDev
    ports: 
      - "127.0.0.1:8659:5000"
    user: u4i-host
    depends_on:
      - db
      - test-db
    env_file:
      - .env
    environment:
      - PRODUCTION=false
      - REDIS_URI=redis://redis:6379/0
      - FLASK_DEBUG=true
      - FLASK_ENV=development
      - BASE_EMAIL=u4i@urls4irl.app
      - DOCKER=true
    volumes:
      - ./run.py:/code/u4i/run.py
      - ./src:/code/u4i/src

    # Sleep for 5 seconds to allow postgres image to start if necessary
    command: >
      sh -c "
      sleep 5 &&
      . /code/venv/bin/activate &&
      which python &&
      flask db upgrade &&
      flask run --host=0.0.0.0 --port=5000
      "

  db:
    image: postgres:16.3-bookworm
    container_name: u4i-local-postgres
    env_file:
     - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  test-db:
    image: postgres:16.3-bookworm
    container_name: u4i-local-postgres-test
    env_file:
     - .env
    environment:
      - POSTGRES_DB=${POSTGRES_TEST_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:6.2
    container_name: u4i-local-redis
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:

